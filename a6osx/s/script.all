(reset-handler abort) (for-each load (command-line-arguments)) (optimize-level 3) (debug-level 0) (when #f (compile-profile (quote source))) (when #f (compile-profile (quote block))) (when #f (profile-load-data "source.pd")) (when #f (profile-load-data "block.pd")) (generate-inspector-information #f) (generate-allocation-counts #f) (generate-instruction-counts #f) (#%$enable-pass-timing #f) (run-cp0 (lambda (cp0 x)            (do ([i 2 (fx- i 1)] [x x (cp0 x)])                ((fx= i 0) x)))) (collect-trip-bytes (expt 2 24)) (collect-request-handler (lambda () (collect 0 1))) (time (for-each (lambda (x y)                    (collect 1 2)                    (compile-file (symbol->string x)                                  (symbol->string y)                                  (quote a6osx)))                 (quote (library.ss prims.ss mathprims.ss record.ss 5_1.ss 5_2.ss 5_3.ss strnum.ss bytevector.ss 5_4.ss 5_6.ss 5_7.ss event.ss 4.ss front.ss foreign.ss 6.ss print.ss newhash.ss format.ss date.ss 7.ss cafe.ss trace.ss engine.ss interpret.ss cprep.ss cpcheck.ss cp0.ss cpvalid.ss cpletrec.ss inspect.ss enum.ss io.ss read.ss primvars.ss syntax.ss costctr.ss expeditor.ss exceptions.ss pretty.ss env.ss fasl.ss reloc.ss pdhtml.ss strip.ss ftype.ss back.ss cpnanopass.ss compile.ss cback.ss))                 (quote (library.a6osx prims.a6osx mathprims.a6osx record.a6osx 5_1.a6osx 5_2.a6osx 5_3.a6osx strnum.a6osx bytevector.a6osx 5_4.a6osx 5_6.a6osx 5_7.a6osx event.a6osx 4.a6osx front.a6osx foreign.a6osx 6.a6osx print.a6osx newhash.a6osx format.a6osx date.a6osx 7.a6osx cafe.a6osx trace.a6osx engine.a6osx interpret.a6osx cprep.a6osx cpcheck.a6osx cp0.a6osx cpvalid.a6osx cpletrec.a6osx inspect.a6osx enum.a6osx io.a6osx read.a6osx primvars.a6osx syntax.a6osx costctr.a6osx expeditor.a6osx exceptions.a6osx pretty.a6osx env.a6osx fasl.a6osx reloc.a6osx pdhtml.a6osx strip.a6osx ftype.a6osx back.a6osx cpnanopass.a6osx compile.a6osx cback.a6osx)))) (when #f (#%$print-pass-stats)) (apply #%$make-boot-file "../boot/a6osx/petite.boot" (quote a6osx) (quote ())   (map symbol->string (quote (library.a6osx prims.a6osx mathprims.a6osx record.a6osx 5_1.a6osx 5_2.a6osx 5_3.a6osx strnum.a6osx bytevector.a6osx 5_4.a6osx 5_6.a6osx 5_7.a6osx event.a6osx 4.a6osx front.a6osx foreign.a6osx 6.a6osx print.a6osx newhash.a6osx format.a6osx date.a6osx 7.a6osx cafe.a6osx trace.a6osx engine.a6osx interpret.a6osx cprep.a6osx cpcheck.a6osx cp0.a6osx cpvalid.a6osx cpletrec.a6osx inspect.a6osx enum.a6osx io.a6osx read.a6osx primvars.a6osx syntax.a6osx costctr.a6osx expeditor.a6osx exceptions.a6osx pretty.a6osx env.a6osx fasl.a6osx reloc.a6osx pdhtml.a6osx strip.a6osx ftype.a6osx back.a6osx)))) (apply #%$make-boot-file "../boot/a6osx/scheme.boot" (quote a6osx) (quote ("petite"))   (map symbol->string (quote (cpnanopass.a6osx compile.a6osx cback.a6osx)))) (when #f (profile-dump-html)) (when #f (profile-dump-data "source.pd")) (when #f (profile-dump-data "block.pd"))
